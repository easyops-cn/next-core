app:
  name: E2E Tests
  id: e2e
  homepage: /e2e
  noAuthGuard: true
  standaloneMode: true
meta:
  customTemplates:

  - name: tpl-a
    state:
    - name: x
      value: X
    - name: z
      value: Z
      expose: true
    bricks:
    - brick: e2e.list-by-use-brick
      properties:
        data: [1, 2]
        useBrick:
          brick: div
          properties:
            textContent: '<% `${STATE.x}:${STATE.z}:${DATA}` %>'
    - brick: e2e.list-by-use-brick
      properties:
        data: [0]
        useBrick:
          brick: div
          children:
          - brick: tpl-modal
            portal: true
            properties:
              m: '<% `${STATE.z}:${DATA}` %>'

  - name: tpl-b
    state:
    - name: x
      value: X
    - name: z
      value: Z
      expose: true
    bricks:
    - brick: div
      properties:
        textContent: '<% `${STATE.x}:${STATE.z}` %>'
    - brick: tpl-modal
      portal: true
      properties:
        m: '<% STATE.z %>'

  - name: tpl-modal
    state:
    - name: m
      value: M
      expose: true
    bricks:
    - brick: div
      properties:
        style:
          position: fixed
          right: '<% `${Math.random() * 300}px` %>'
          top: '<% `${Math.random() * 300}px` %>'
        textContent: '<% `Modal:${STATE.x ?? STATE.z ?? STATE.m}` %>'

  - name: tpl-c
    state:
    - name: c
      resolve:
        useProvider: e2e.return-by-timeout
        args:
        - 100
        - C
    bricks:
    - brick: div
      ref: output
      properties:
        textContent: Inner Initial
    - brick: e2e.list-by-use-brick
      properties:
        data: [1]
        useBrick:
          brick: button
          properties:
            textContent: Click Me
          events:
            click:
              targetRef: output
              properties:
                textContent: Inner Updated
          lifeCycle:
            onMount:
              targetRef: output
              properties:
                textContent: "<% `Inner Mounted <${STATE.c}>` %>"

  - name: tpl-d
    bricks:
    - brick: div
      ref: output
      properties:
        textContent: Outer Initial
    - brick: e2e.list-by-use-brick
      properties:
        data: [2]
        useBrick:
          brick: tpl-c

routes:

- path: '${APP.homepage}/use-brick/1'
  context:
  - name: stage
    value: 1
  bricks:
  - brick: tpl-a
  - brick: e2e.list-by-use-brick
    properties:
      id: my-list
      data: [3, 4]
      useBrick:
        brick: tpl-a
        properties:
          z: '<% DATA %>'
  - brick: e2e.list-by-use-brick
    properties:
      id: my-list-2
      data: [7, 8]
      useBrick:
        if: '<% DATA !== 0  %>'
        brick: div
        children:
        - brick: tpl-modal
          portal: true
          properties:
            m: '<% `S:${DATA}` %>'
  - brick: div
    properties:
      textContent: Reset
    events:
      click:
      - target: '#my-list'
        properties:
          data: |
            <%
              CTX.stage === 1
                ? [3, 5]
                : [4]
            %>
      - target: '#my-list-2'
        properties:
          data: |
            <%
              CTX.stage === 1
                ? [7, 9]
                : [8, 0]
            %>
      - action: context.replace
        args:
        - stage
        - '<% CTX.stage + 1 %>'

# Bricks within `useBrick` can access the template refs.
- path: '${APP.homepage}/use-brick/2'
  bricks:
  - brick: tpl-c

# Nested `useBrick` and tpl can access the template refs.
- path: '${APP.homepage}/use-brick/3'
  bricks:
  - brick: tpl-d

- path: '${APP.homepage}/control-nodes/1'
  bricks:
  - brick: div
    children:
    - brick: span
      properties:
        textContent: "Hello "
    - brick: span
      properties:
        textContent: "World"
  - brick: ':forEach'
    dataSource: [1, 2]
    children:
    - brick: span
      properties:
        textContent: '<% ITEM %>'
    - brick: span
      properties:
        textContent: ','
  - brick: div
    children:
    - brick: span
      properties:
        textContent: "Goodbye "
    - brick: span
      properties:
        textContent: "World"

- path: '${APP.homepage}/control-nodes/2'
  bricks:
  - brick: div
    properties:
      textContent: "Hello"
  - brick: ':forEach'
    dataSource: [["a"], ["b","c"]]
    children:
    - brick: div
      properties:
        textContent: '<% `start:${ITEM.length}` %>'
    - brick: ':forEach'
      dataSource: '<% ITEM %>'
      children:
      - brick: span
        properties:
          textContent: '<% ITEM %>'
    - brick: div
      properties:
        textContent: '<% `end:${ITEM.length}` %>'
  - brick: div
    properties:
      textContent: "Goodbye"

- path: '${APP.homepage}/control-nodes/3'
  context:
  - name: list
    value: [1, 2]
  bricks:
  - brick: tpl-modal
    portal: true
    properties:
      m: Hello
  - brick: ':forEach'
    dataSource: '<% "track context", CTX.list %>'
    children:
    - brick: tpl-a
      properties:
        z: '<% ITEM %>'
  - brick: tpl-modal
    portal: true
    properties:
      m: Goodbye
  - brick: div
    properties:
      textContent: Refresh
    events:
      click:
      - if: '<% CTX.list[0] !== 1 %>'
        action: context.replace
        args:
        - list
        - [5, 6]
      - if: '<% CTX.list[0] === 1 %>'
        action: context.replace
        args:
        - list
        - [3, 4]

- path: '${APP.homepage}/control-nodes/4'
  context:
  - name: list
    value: [1, 2]
  bricks:
  - brick: tpl-modal
    portal: true
    properties:
      m: Hello
  - brick: ':forEach'
    dataSource: '<% "track context", CTX.list %>'
    children:
    - brick: tpl-b
      properties:
        z: '<% ITEM %>'
  - brick: tpl-modal
    portal: true
    properties:
      m: Goodbye
  - brick: div
    properties:
      textContent: Refresh
    events:
      click:
      - if: '<% CTX.list[0] !== 1 %>'
        action: context.replace
        args:
        - list
        - [5, 6]
      - if: '<% CTX.list[0] === 1 %>'
        action: context.replace
        args:
        - list
        - [3, 4]
