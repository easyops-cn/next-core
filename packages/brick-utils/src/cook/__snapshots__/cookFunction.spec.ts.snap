// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`cookFunction access before initialized should throw 1`] = `"Cannot access 'b' before initialization"`;

exports[`cookFunction assign \`for const ... of\` should throw 1`] = `"Assignment to constant variable"`;

exports[`cookFunction assign \`for const ...\` should throw 1`] = `"Assignment to constant variable"`;

exports[`cookFunction assign constants should throw 1`] = `"Assignment to constant variable"`;

exports[`cookFunction assign function expressions should throw 1`] = `"Assignment to constant variable"`;

exports[`cookFunction assign global functions should throw 1`] = `"Assignment to constant variable"`;

exports[`cookFunction assign member of nil should throw 1`] = `"Cannot set property 'b' of undefined"`;

exports[`cookFunction async functions should throw 1`] = `"Async function is not allowed: \`async function test(){}\`"`;

exports[`cookFunction bitwise and assignment should throw 1`] = `"Unsupported assignment operator \`&=\`"`;

exports[`cookFunction generator functions should throw 1`] = `"Generator function is not allowed: \`function* test(){}\`"`;

exports[`cookFunction labeled statement should throw 1`] = `
"Unsupported node type \`LabeledStatement\`: \`loop:
          for (let i = 0; i < 1; i++) {}\`"
`;

exports[`cookFunction throw if restrict no war usage 1`] = `"Var declaration is not recommended, use \`let\` or \`const\` instead: \`var a = 1;\`"`;

exports[`cookFunction try without catch should throw 1`] = `"a is not a function"`;
