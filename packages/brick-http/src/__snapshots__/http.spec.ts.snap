// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`http DELETE http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "DELETE",
  },
]
`;

exports[`http GET http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http GET http://example.com with [{"params":"<URLSearchParams> lang=zh-CN"}] should work 1`] = `
Array [
  "http://example.com/?lang=zh-CN",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http GET http://example.com with [{"params":{"lang":"zh-CN","type":null}}] should work 1`] = `
Array [
  "http://example.com/?lang=zh-CN&type=&category=",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http GET http://example.com with [{"params":{"lang":["zh-CN","en-US"],"type":null}}] should work 1`] = `
Array [
  "http://example.com/?lang=zh-CN&lang=en-US&type=&category=",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http GET http://example.com/for-good?token=secret with [{"params":{"lang":"zh-CN","type":null}}] should work 1`] = `
Array [
  "http://example.com/for-good?token=secret&lang=zh-CN&type=&category=",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http HEAD http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "HEAD",
  },
]
`;

exports[`http PATCH http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "PATCH",
  },
]
`;

exports[`http POST http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com with [{"for":"good"}] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "body": "{\\"for\\":\\"good\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com/for-good with ["<FormData> [[\\"for\\",\\"the throne\\"]]"] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "<FormData> [[\\"for\\",\\"the throne\\"]]",
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com/for-good with ["for=the-throne"] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "for=the-throne",
    "headers": Headers {
      "map": Object {
        "content-type": "application/x-www-form-urlencoded",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com/for-good with [{"for":"the throne"},{"headers":{"map":{"x-requested-with":"XMLHttpRequest"}}}] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
        "x-requested-with": "XMLHttpRequest",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com/for-good with [{"for":"the throne"},{"headers":{"x-requested-with":"XMLHttpRequest"}}] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
        "x-requested-with": "XMLHttpRequest",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com/for-good with [{"for":"the throne"},{"params":"<URLSearchParams> lang=zh-CN"}] should work 1`] = `
Array [
  "http://example.com/for-good?lang=zh-CN",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http POST http://example.com/for-good with [{"for":"the throne"},{"params":{"lang":"zh-CN","type":null}}] should work 1`] = `
Array [
  "http://example.com/for-good?lang=zh-CN&type=&category=",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http PUT http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "PUT",
  },
]
`;

exports[`http requestWithBody or simpleRequest DELETE http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "DELETE",
  },
]
`;

exports[`http requestWithBody or simpleRequest GET http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http requestWithBody or simpleRequest GET http://example.com with [{"params":"<URLSearchParams> lang=zh-CN"}] should work 1`] = `
Array [
  "http://example.com/?lang=zh-CN",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http requestWithBody or simpleRequest GET http://example.com with [{"params":{"lang":"zh-CN","type":null}}] should work 1`] = `
Array [
  "http://example.com/?lang=zh-CN&type=&category=",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http requestWithBody or simpleRequest GET http://example.com with [{"params":{"lang":["zh-CN","en-US"],"type":null}}] should work 1`] = `
Array [
  "http://example.com/?lang=zh-CN&lang=en-US&type=&category=",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http requestWithBody or simpleRequest GET http://example.com/for-good?token=secret with [{"params":{"lang":"zh-CN","type":null}}] should work 1`] = `
Array [
  "http://example.com/for-good?token=secret&lang=zh-CN&type=&category=",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;

exports[`http requestWithBody or simpleRequest HEAD http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "HEAD",
  },
]
`;

exports[`http requestWithBody or simpleRequest PATCH http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "PATCH",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com with [{"for":"good"}] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "body": "{\\"for\\":\\"good\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com/for-good with ["<FormData> [[\\"for\\",\\"the throne\\"]]"] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "<FormData> [[\\"for\\",\\"the throne\\"]]",
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com/for-good with ["for=the-throne"] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "for=the-throne",
    "headers": Headers {
      "map": Object {
        "content-type": "application/x-www-form-urlencoded",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com/for-good with [{"for":"the throne"},{"headers":{"map":{"x-requested-with":"XMLHttpRequest"}}}] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
        "x-requested-with": "XMLHttpRequest",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com/for-good with [{"for":"the throne"},{"headers":{"x-requested-with":"XMLHttpRequest"}}] should work 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
        "x-requested-with": "XMLHttpRequest",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com/for-good with [{"for":"the throne"},{"params":"<URLSearchParams> lang=zh-CN"}] should work 1`] = `
Array [
  "http://example.com/for-good?lang=zh-CN",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest POST http://example.com/for-good with [{"for":"the throne"},{"params":{"lang":"zh-CN","type":null}}] should work 1`] = `
Array [
  "http://example.com/for-good?lang=zh-CN&type=&category=",
  Object {
    "body": "{\\"for\\":\\"the throne\\"}",
    "headers": Headers {
      "map": Object {
        "content-type": "application/json",
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "POST",
  },
]
`;

exports[`http requestWithBody or simpleRequest PUT http://example.com with [] should work 1`] = `
Array [
  "http://example.com",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "PUT",
  },
]
`;

exports[`http should return http response object  1`] = `
Object {
  "config": Object {
    "method": "GET",
    "options": Object {
      "headers": Headers {
        "map": Object {
          "x-b3-sampled": "1",
          "x-b3-spanid": "12345",
          "x-b3-traceid": "8fffffffffffffff12345",
        },
      },
      "observe": "response",
    },
    "url": "http://example.com",
  },
  "data": Object {
    "foo": "bar",
  },
  "headers": Headers {
    "map": Object {
      "content-type": "text/plain;charset=UTF-8",
    },
  },
  "status": 200,
  "statusText": "",
}
`;

exports[`http should work with http.request 1`] = `
Array [
  "http://example.com/for-good",
  Object {
    "headers": Headers {
      "map": Object {
        "x-b3-sampled": "1",
        "x-b3-spanid": "12345",
        "x-b3-traceid": "8fffffffffffffff12345",
      },
    },
    "method": "GET",
  },
]
`;
