# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches:
    - master
    - next
  pull_request:
    branches:
    - master
    - next
    - renovate/*

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Setup timezone
      uses: zcong1993/setup-timezone@master
      with:
        timezone: Asia/Shanghai

    - uses: actions/checkout@v2

    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - run: yarn install --frozen-lockfile
    - run: yarn build
    - run: yarn test
    # - run: yarn test:e2e:ci

    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        path-to-lcov: ./.coverage/lcov.info

    - name: Check tags
      id: check-tags
      run: |
        echo "::set-output name=with-tags::$(git tag --points-at HEAD)"

    - name: Lerna Publish
      run: npx lerna publish from-git --dist-tag latest --yes
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      if: steps.check-tags.outputs.with-tags != ''
